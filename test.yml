apiVersion: v1
kind: ConfigMap
metadata:
  name: mountconfig
data:
  BUCKET: 'media'
  MOUNTPOINT: '/media'
  S3URL: 'http://minio.s3-home.svc.cluster.local'
  S3PATHREQ: 'true'
  S3UID: '1001'
  S3GID: '1001'

---
apiVersion: v1
kind: Pod
metadata:
  name: s3fs-sidecar-test
spec:

  restartPolicy: Never

  volumes:
  - name: shared-data
    emptyDir: {}

  containers:

  - name: s3sidecar
    image: nagyclaudiu83/s3fs-sidecar:v0.0.3
    imagePullPolicy: Always
    securityContext:
      privileged: true
      capabilities:
        add:
          - SYS_ADMIN
    env:
      - name: AWSACCESSKEYID
        valueFrom:
          secretKeyRef:
            name: s3secret
            key: AWSACCESSKEYID
      - name: AWSSECRETACCESSKEY
        valueFrom:
          secretKeyRef:
            name: s3secret
            key: AWSSECRETACCESSKEY
      - name: BUCKET
        valueFrom:
         configMapKeyRef:
          name: mountconfig
          key: BUCKET
      - name: MOUNTPOINT
        valueFrom:
         configMapKeyRef:
           name: mountconfig
           key: MOUNTPOINT
      - name: S3URL
        valueFrom:
         configMapKeyRef:
           name: mountconfig
           key: S3URL
      - name: S3PATHREQ
        valueFrom:
         configMapKeyRef:
           name: mountconfig
           key: S3PATHREQ

    volumeMounts:
    - name: shared-data
      mountPath: /media
      mountPropagation: Bidirectional

  - name: ubuntu-container
    image: ubuntu
    volumeMounts:
    - name: shared-data
      mountPath: /media
      mountPropagation: HostToContainer

    command: ["/bin/sh"]
    args: ["-c", "echo running... && trap : TERM INT; (while true; do sleep 10; done) & wait"]
